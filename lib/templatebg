return Scaffold(
  appBar: PreferredSize(
    preferredSize: Size(MediaQuery.of(context).size.width, 170),
    child: Column(
      children: [
      AppBar(
        toolbarHeight: 140,
        backgroundColor: Colors.white,
        elevation: 0,
        centerTitle: false,
        title: const Center(
          child: Text(
            "Histori Pembayaran",
            style: TextStyle(
              color: Colors.black,
            ),
                ),
              ),
            ),
Container(
  width: MediaQuery.of(context).size.width,
  height: 30,
  decoration: const BoxDecoration(
    color: Colors.white,
  ),
            )
          ],
        ),
      ),
body: Stack(
  children: [
  Container(
    width: MediaQuery.of(context).size.width,
    height: MediaQuery.of(context).size.height,
    decoration: const BoxDecoration(
      gradient: const LinearGradient(
        begin: Alignment.topRight,
        end: Alignment.bottomLeft,
        colors: [
                const Color.fromARGB(255, 20, 136, 204),
                const Color.fromARGB(255, 43, 50, 178),
              ],
            )),
          ),
Transform.rotate(
  angle: -math.pi / 3.3,
  alignment: Alignment.topLeft,
  child: Container(
    width: MediaQuery.of(context).size.width,
    height: MediaQuery.of(context).size.height,
    decoration: BoxDecoration(color: Colors.white, boxShadow: [
      BoxShadow(
        color: Colors.grey.shade600,
        spreadRadius: 0,
        blurRadius: 8,
        offset: const Offset(4, 4))
              ]),
            ),
          ),
        ],
      ),
    );
  }
}


return Expanded(
  child: ListView.builder(
    itemCount: snapshot.data!.length,
    itemBuilder: (context, index) {
      return Column(
        children: [
        Container(
          width:
          MediaQuery.of(context).size.width,
          height: 50,
          padding: const EdgeInsets.all(15),
            decoration: BoxDecoration(
              color: const Color.fromARGB(
                255, 0, 136, 248),
                borderRadius: const BorderRadius.all(
                  Radius.circular(10),
                                          ),
                  boxShadow: const [
                    BoxShadow(
                      color: Color.fromARGB(
                        231, 125, 125, 125),
                        spreadRadius: 0,
                          blurRadius: 4,
                            offset: Offset(0, 2),
                                            )
                                          ],
  border: Border.all(
    color: const Color.fromARGB(
      88, 73, 74, 77),
                                          ),
                                        ),
child: Row(
  mainAxisAlignment:
  MainAxisAlignment.spaceBetween,
  children: [
  Text('Kamar - ${ketkamar.noKamar}',
    style: const TextStyle(
      color: Color.fromARGB(
        255, 255, 255, 255),
        fontWeight: FontWeight.w500,
          fontSize: 10)),
Row(
  children: [
  Text(ketkamar.statusKmr,
    style: const TextStyle(
      color: Color.fromARGB(
        255, 255, 255, 255),
        fontWeight:
FontWeight.w500,
  fontSize: 10)),
                                              ],
                                            ),
                                          ],
                                        ),
                                      ),
const SizedBox(height: 15),
                                    ],
                                  );
                                }),
                          );

return FutureBuilder < ShowMagangActiveResponse ?> (
  future: recentC.showMagangActive(),
  builder: (context, snapshot) {
    if (snapshot.hasData) {
      return ListView.separated(
        shrinkWrap: true,
        separatorBuilder: (context, index) =>
        Divider(color: ColorHelpers.backgroundOfIntroduction),
        itemCount: snapshot.data!.body.length,
        itemBuilder: (context, index) => Padding(
          padding: const EdgeInsets.all(8.0),
            child: Container(
              height: 100,
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.all(Radius.circular(6)),
                boxShadow: [
                BoxShadow(
                  blurRadius: 0.5,
                  offset: Offset(5, 5),
                  color: Colors.grey.withOpacity(0.5),
                ),
              ]),
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: [
                    CachedNetworkImage(
                      imageUrl: UrlHelper.baseUrlImagePenyedia +
                    snapshot.data!.body[index].foto,
                      width: 100,
                    ),
                    Expanded(
                      child: Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 5),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                            Text(
                              snapshot.data!.body[index].posisiMagang,
                              maxLines: 2,
                              overflow: TextOverflow.ellipsis,
                              style: TextStyle(
                                fontSize: 17,
                                fontWeight: FontWeight.w500,
                                fontFamily: 'poppins',
                                color: ColorHelpers.colorBlackText),
                            ),
                            Text(
                              snapshot.data!.body[index].namaPerusahaan,
                              maxLines: 1,
                              overflow: TextOverflow.ellipsis,
                              style: TextStyle(
                                fontFamily: 'poppins',
                                fontSize: 15,
                                color: ColorHelpers.colorBlackText,
                                fontWeight: FontWeight.w500),
                            ),
                            Expanded(
                              child: Text(
                                maxLines: 1,
                                overflow: TextOverflow.ellipsis,
                                "${snapshot.data!.body[index].startOn}sd${snapshot.data!.body[index].finishOn}"),
                            ),
                          ],
                          ),
                        ),
                      ),
      ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: ColorHelpers.backgroundBlueNew),
        onPressed: () {
          Get.to(() => DetailMagangBerlangsung(
            dataMagang: snapshot.data!.body[index]));
        },
        child: Text("Detail Magang"))
                    ],
                  ),
                ),
              ),
            ),
          );
    } else {
      return Center(
        child:
        Column(mainAxisAlignment: MainAxisAlignment.center, children: [
          SizedBox(
            width: 250,
            height: 250,
            child: Lottie.asset("assets/lotties/thinking.json")),
          Text(
            "Tidak ada Magang yang berlansung",
            style: TextStyle(
              fontSize: 20,
              fontFamily: 'poppins',
              color: ColorHelpers.colorBlackText,
              fontWeight: FontWeight.w500),
          )
        ]),
      );
    }
  },
    );


